--
-- demo\rosetta\ArithComplex.exw
-- =============================
--
include complex.e
complex a = complex_new(1,1),  -- (or just {1,1})
        b = complex_new(3.14159,1.25),
        c = complex_new(1,0),
        d = complex_new(0,1)
printf(1,"a = %s\n",{complex_sprint(a)})
printf(1,"b = %s\n",{complex_sprint(b)})
printf(1,"c = %s\n",{complex_sprint(c)})
printf(1,"d = %s\n",{complex_sprint(d)})
printf(1,"a+b = %s\n",{complex_sprint(complex_add(a,b))})
printf(1,"a*b = %s\n",{complex_sprint(complex_mul(a,b))})
printf(1,"1/a = %s\n",{complex_sprint(complex_inv(a))})
printf(1,"c/a = %s\n",{complex_sprint(complex_div(c,a))})
printf(1,"c-a = %s\n",{complex_sprint(complex_sub(c,a))})
printf(1,"d-a = %s\n",{complex_sprint(complex_sub(d,a))})
printf(1,"-a = %s\n",{complex_sprint(complex_neg(a))})
printf(1,"conj a = %s\n",{complex_sprint(complex_conjugate(a))})

if getc(0) then end if

--/*
a = 1+i
b = 3.14159+1.25i
c = 1
d = i
a+b = 4.14159+2.25i
a*b = 1.89159+4.39159i
1/a = 0.5-0.5i
c/a = 0.5-0.5i
c-a = -i
d-a = -1
-a = -1-i
conj a = 1-i
--*/

-- original (translation of Eu)
--/*
constant REAL = 1,
         IMAG = 2

type complex(sequence s)
    return length(s)=2 and atom(s[REAL]) and atom(s[IMAG])
end type

function add(complex a, complex b)
    return sq_add(a,b)
end function

function mult(complex a, complex b)
    return {a[REAL] * b[REAL] - a[IMAG] * b[IMAG],
            a[REAL] * b[IMAG] + a[IMAG] * b[REAL]}
end function

function inv(complex a)
atom denom
    denom = a[REAL] * a[REAL] + a[IMAG] * a[IMAG]
    return {a[REAL] / denom, -a[IMAG] / denom}
end function

function neg(complex a)
    return sq_uminus(a)
end function

function scomplex(complex a)
sequence s = ""
atom ar, ai
    {ar, ai} = a
    if ar!=0 then
        s = sprintf("%g",ar)
    end if
    
    if ai!=0 then
        if ai=1 then
            s &= "+i"
        elsif ai=-1 then
            s &= "-i"
        else
            s &= sprintf("%+gi",ai)
        end if
    end if
    
    if length(s)=0 then
        return "0"
    end if
    return s
end function

complex a, b
a = { 1.0,     1.0 }
b = { 3.14159, 1.2 }
printf(1,"a = %s\n",{scomplex(a)})
printf(1,"b = %s\n",{scomplex(b)})
printf(1,"a+b = %s\n",{scomplex(add(a,b))})
printf(1,"a*b = %s\n",{scomplex(mult(a,b))})
printf(1,"1/a = %s\n",{scomplex(inv(a))})
printf(1,"-a = %s\n",{scomplex(neg(a))})
--*/
--/*
a = 1+i
b = 3.14159+1.2i
a+b = 4.14159+2.2i
a*b = 1.94159+4.34159i
1/a = 0.5-0.5i
-a = -1-i
--*/

