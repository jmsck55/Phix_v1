--
--  demo/pGUI/lesson6.exw
--
--  All made by Daniel Kluss(xerox_irs@lvcm.com)
--  Ported (from win32lib) to pGUI by Pete Lomax.
--
constant usetimer = 01

include pGUI.e
include winbmp.ew   -- load_bmp()
include opengl.e    -- glGenTextures, glBindTexture
include glu.e       -- gluPerspective

Ihandln dialog
Ihandle canvas

atom xrot = 0,  -- X Rotation
     yrot = 0,  -- Y Rotation
     zrot = 0   -- Z Rotation

--sequence textures = {NULL}    -- SUG: different textures/side?

procedure LoadGLTextures()
-->DEV/DOC/ask about using IupLoadImage()? [NAH]
    sequence TextureImage = load_bmp(`data\NeHe.bmp`)
--  sequence TextureImage = load_bmp(`data\floor.bmp`)      -- (fine)
--  sequence TextureImage = load_bmp(`data\mur043.bmp`)     -- (fine)
    atom {depth,pMem,width,height} = TextureImage
    if depth=-1 then ?9/0 end if

    atom {texture} = glGenTextures(1)
--  textures = glGenTextures(1)

    -- Typical Texture Generation Using Data From The Bitmap
    glBindTexture(GL_TEXTURE_2D, texture)
--  glBindTexture(GL_TEXTURE_2D, textures[1])
-->DEV/DOC
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, pMem)
    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
--  free(pMem)
end procedure

atom t1 = time()+1
integer fps = 0

procedure display()
    glClear(GL_COLOR_BUFFER_BIT+GL_DEPTH_BUFFER_BIT)    -- Clear The Screen And The Depth Buffer
    glLoadIdentity()                                    -- Reset The View
    glTranslate(0,0,-5)

    glRotate(xrot,1,0,0)
    glRotate(yrot,0,1,0)
    glRotate(zrot,0,0,1)

--  glBindTexture(GL_TEXTURE_2D, texture)
--  glBindTexture(GL_TEXTURE_2D, textures[1])

    glBegin(GL_QUADS)
    -- Front Face
    glTexCoord(0,0) glVertex(-1,-1, 1)
    glTexCoord(1,0) glVertex( 1,-1, 1)
    glTexCoord(1,1) glVertex( 1, 1, 1)
    glTexCoord(0,1) glVertex(-1, 1, 1)
    -- Back Face
    glTexCoord(1,0) glVertex(-1,-1,-1)
    glTexCoord(1,1) glVertex(-1, 1,-1)
    glTexCoord(0,1) glVertex( 1, 1,-1)
    glTexCoord(0,0) glVertex( 1,-1,-1)
    -- Top Face
    glTexCoord(0,1) glVertex(-1, 1,-1)
    glTexCoord(0,0) glVertex(-1, 1, 1)
    glTexCoord(1,0) glVertex( 1, 1, 1)
    glTexCoord(1,1) glVertex( 1, 1,-1)
    -- Bottom Face
    glTexCoord(1,1) glVertex(-1,-1,-1)
    glTexCoord(0,1) glVertex( 1,-1,-1)
    glTexCoord(0,0) glVertex( 1,-1, 1)
    glTexCoord(1,0) glVertex(-1,-1, 1)
    -- Right face
    glTexCoord(1,0) glVertex( 1,-1,-1)
    glTexCoord(1,1) glVertex( 1, 1,-1)
    glTexCoord(0,1) glVertex( 1, 1, 1)
    glTexCoord(0,0) glVertex( 1,-1, 1)
    -- Left Face
    glTexCoord(0,0) glVertex(-1,-1,-1)
    glTexCoord(1,0) glVertex(-1,-1, 1)
    glTexCoord(1,1) glVertex(-1, 1, 1)
    glTexCoord(0,1) glVertex(-1, 1,-1)
    glEnd()

    if usetimer then
        xrot += 3
        yrot += 2
        zrot += 4
    else
        xrot += 0.3
        yrot += 0.2
        zrot += 0.4
    end if
    fps += 1
    if time()>t1 then
        IupSetStrAttribute(dialog,"TITLE","Lesson 6 [%d fps]",{fps})
        fps = 0
        t1 = time()+1
    end if
end procedure

function resize_cb(Ihandle /*ih*/, integer width, integer height)
    glViewport(0,0,width,height)

    glMatrixMode(GL_PROJECTION)                         -- Select The Projection Matrix
    glLoadIdentity()                                    -- Reset The Projection Matrix

    -- Calculate The Aspect Ratio Of The Window
    gluPerspective(45.0,width/height,0.1,100.0)

    glMatrixMode(GL_MODELVIEW)                          -- Select The Modelview Matrix
    glLoadIdentity()                                    -- Reset The Modelview Matrix
    display()
    return 0
end function

procedure init()
    LoadGLTextures()                                    -- Jump To Texture Loading Routine ( NEW )
    glEnable(GL_TEXTURE_2D)                             -- Enable Texture Mapping ( NEW )
    glShadeModel(GL_SMOOTH)                             -- Enable Smooth Shading
    glClearColor(0.0, 0.0, 0.0, 0.5)                    -- Black Background
    glClearDepth(1.0)                                   -- Depth Buffer Setup
    glEnable(GL_DEPTH_TEST)                             -- Enables Depth Testing
    glDepthFunc(GL_LEQUAL)                              -- The Type Of Depth Testing To Do
    glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST)   -- Really Nice Perspective Calculations
    glDisable(GL_DITHER)
end procedure

function action_cb(Ihandle ih)
    IupGLMakeCurrent(ih)
    glClear(or_bits(GL_COLOR_BUFFER_BIT,GL_DEPTH_BUFFER_BIT))
    display()
    IupGLSwapBuffers(ih)
    return IUP_DEFAULT
end function

function idle_cb()
    return action_cb(canvas)
end function
constant cb_idle = Icallback("idle_cb")

procedure main()
Ihandln timer

    IupOpen()
    IupGLCanvasOpen()

    if usetimer then
        timer = IupTimer(cb_idle,10)                    -- (~64 fps, 0% CPU)
    else
        IupSetGlobalFunction("IDLE_ACTION", cb_idle)    -- (~690 fps, 100% CPU)
    end if

    canvas = IupGLCanvas()
    IupSetCallback(canvas, "ACTION", Icallback("action_cb"))
    IupSetCallback(canvas, "RESIZE_CB", Icallback("resize_cb"))
    IupSetAttribute(canvas, "BUFFER", "DOUBLE")
    IupSetAttribute(canvas, "BORDER", "NO")
    IupSetAttribute(canvas, "RASTERSIZE", "500x500")

    dialog = IupDialog(IupVbox({canvas},"MARGIN=5x5"))
    IupSetAttribute(dialog, "TITLE", "Lesson 6")

    IupMap(dialog)

    IupGLMakeCurrent(canvas)
    init()
    IupSetAttribute(canvas, "RASTERSIZE", NULL)

    {} = resize_cb(dialog, 500, 500)

    IupShowXY(dialog, IUP_CENTER, IUP_CENTER)

    IupMainLoop()

    dialog = IupDestroy(dialog)
    if usetimer then
        timer = IupDestroy(timer)
    end if

    IupClose()

end procedure
main()
