--
--  demo\pGUI\submenu.exw
--  =====================
--
--   Creates a dialog with a menu with three submenus.
--   One of the submenus has a submenu, which has another submenu.
--
include pGUI.e

function item_help_cb(Ihandle /*ih*/)
--  IupMessage("Warning", "Only Help and Exit items perform an operation")
    puts(1,"Warning: Only Help and Exit items perform an operation\n")
    return IUP_DEFAULT
end function

function item_exit_cb(Ihandle /*ih*/)
    return IUP_CLOSE
end function

function exit_cb(Ihandle /*ih*/)
    ?"exit_cb"
    return IUP_DEFAULT
end function
constant cb_exit = Icallback("exit_cb")

Ihandln popup_menu = NULL

--function rightclick_cb(Ihandle /*ih*/, integer /*id*/)
function button_cb(Ihandle /*ih*/, integer button, pressed, /*x*/, /*y*/, atom /*pStatus*/)
--ih: identifies the element that activated the event.
--button: identifies the activated mouse button:
    if button = IUP_BUTTON3 and pressed=0 then
--      string status = peek_string(pStatus)
--?{pressed,{x,y},status}
--IUP_BUTTON1 - left mouse button (button 1);
--IUP_BUTTON2 - middle mouse button (button 2);
--IUP_BUTTON3 - right mouse button (button 3).
--  char attr[50];
        if popup_menu = NULL then
--/* previous version (should I want to improve p2js_emit.e):
            popup_menu = IupMenu({IupItem("Cut"),
                                  IupItem("Copy"),
                                  IupItem("Paste"),
                                  IupItem("Delete"),
                                  IupSeparator(),
                                  IupItem("Reload"),
                                  IupItem("Exit",cb_exit)})
--*/
            sequence items = {IupItem("Cut"),
                              IupItem("Copy"),
                              IupItem("Paste"),
                              IupItem("Delete"),
                              IupSeparator(),
                              IupItem("Reload"),
                              IupItem("Exit",cb_exit)}
            popup_menu = IupMenu(items)
        end if  
        IupPopup(popup_menu, IUP_MOUSEPOS, IUP_MOUSEPOS)
--?"IupPopup returns"
        return IUP_IGNORE
    end if
    return IUP_DEFAULT
end function

function main_menu()
--
-- Created twice, once for the top (bar) menu, once for the lower drop-down.
-- Done this way so that you can seen the different display behaviours.
-- (And broken up into sequence/Ihandle for the benefit of pwa/p2js)
--
--/* previous version (should I want to improve p2js_emit.e):
    Ihandle menu_file = IupMenu({IupMenuItem("&New"),
                                 IupMenuItem("&Open"),
                                 IupMenuItem("&Close"),
                                 IupSeparator(),
                                 IupMenuItem("E&xit", Icallback("item_exit_cb"))}),
            menu_paste = IupMenu({IupMenuItem("Normal"),
                                  IupMenuItem("html-stripped")}),
            menu_circle = IupMenu({IupMenuItem("Normal"),
                                   IupMenuItem("Dotted"),
                                   IupSeparator(),
                                   IupMenuItem("Filled")}),
            menu_triangle = IupMenu({IupMenuItem("Equilateral"),
                                     IupMenuItem("Isoceles"),
                                     IupMenuItem("Scalenus")}),
            menu_create = IupMenu({IupMenuItem("Line"),
                                   IupSubmenu("Circle",menu_circle),
                                   IupSeparator(),
                                   IupSubmenu("Triangle", menu_triangle)}),
            menu_edit = IupMenu({IupMenuItem("Copy"),
                                 IupSubmenu("Paste",menu_paste),
                                 IupSeparator(),
                                 IupSubmenu("Create", menu_create)}),
--          menu_help = IupMenu({IupMenuItem("&Help", Icallback("item_help_cb"))}),
            menu_help = IupMenuItem("&Help", Icallback("item_help_cb")),
            menu = IupMenu({IupSubmenu("&File", menu_file),
                            IupSubmenu("&Edit", menu_edit),
--                          IupSubmenu("&Help", menu_help)}),
                            menu_help})
--*/
    sequence file_items = {IupMenuItem("&New"),
                           IupMenuItem("&Open"),
                           IupMenuItem("&Close"),
                           IupSeparator(),
                           IupMenuItem("E&xit", Icallback("item_exit_cb"))},
             paste_items = {IupMenuItem("Normal"),
                            IupMenuItem("html-stripped")},
             circle_items = {IupMenuItem("Normal"),
                             IupMenuItem("Dotted"),
                             IupSeparator(),
                             IupMenuItem("Filled")},
             triangle_items = {IupMenuItem("Equilateral"),
                               IupMenuItem("Isoceles"),
                               IupMenuItem("Scalenus")}
    Ihandle menu_file = IupMenu(file_items),
            menu_paste = IupMenu(paste_items),
            menu_circle = IupMenu(circle_items),
            menu_triangle = IupMenu(triangle_items)
    sequence create_items = {IupMenuItem("Line"),
                             IupSubmenu("Circle",menu_circle),
                             IupSeparator(),
                             IupSubmenu("Triangle", menu_triangle)}
    Ihandle menu_create = IupMenu(create_items)
    sequence edit_items = {IupMenuItem("Copy"),
                           IupSubmenu("Paste",menu_paste),
                           IupSeparator(),
                           IupSubmenu("Create", menu_create)}
    Ihandle menu_edit = IupMenu(edit_items),
--          menu_help = IupMenu({IupMenuItem("&Help", Icallback("item_help_cb"))}),
            menu_help = IupMenuItem("&Help", Icallback("item_help_cb"))
    sequence menu_items = {IupSubmenu("&File", menu_file),
                           IupSubmenu("&Edit", menu_edit),
--                         IupSubmenu("&Help", menu_help)}),
                           menu_help}
    Ihandle menu = IupMenu(menu_items)
    return menu
end function

Ihandln popup_menu2 = NULL

--function rightclick_cb(Ihandle /*ih*/, integer /*id*/)
function button2_cb(Ihandle /*ih*/, integer button, pressed, /*x*/, /*y*/, atom /*pStatus*/)
--ih: identifies the element that activated the event.
--button: identifies the activated mouse button:
    if button = IUP_BUTTON3 and pressed=0 then
--      string status = peek_string(pStatus)
--?{pressed,{x,y},status}
--IUP_BUTTON1 - left mouse button (button 1);
--IUP_BUTTON2 - middle mouse button (button 2);
--IUP_BUTTON3 - right mouse button (button 3).
--  char attr[50];
        if popup_menu2 = NULL then
            popup_menu2 = main_menu() -- (a fresh separate copy)
/*
            popup_menu2 = IupMenu({IupItem("A different popup menu"),
                                   IupItem("Copy"),
                                  IupItem("Paste"),
                                  IupItem("Delete"),
                                  IupSeparator(),
                                  IupItem("Reload"),
                                  IupItem("Exit",cb_exit)})
*/
        end if  
        IupPopup(popup_menu2, IUP_MOUSEPOS, IUP_MOUSEPOS)
--?"IupPopup returns"
        return IUP_IGNORE
    end if
    return IUP_DEFAULT
end function

IupOpen()
Ihandle menu = main_menu(),
        text = IupText(`VALUE = "Right click here for a Cut Copy Paste Delete Reload Exit popup", EXPAND = YES`),
        txt2 = IupText(`VALUE = "Right click here for a different menu popup", EXPAND = YES`),
        vbox = IupVbox({text,txt2}),
        dlg = IupDialog(vbox,`TITLE="IupSubmenu Example", SIZE = QUARTERxEIGHTH`)
--IupSetCallback(dlg, "RIGHTCLICK_CB",  Icallback("rightclick_cb")) -- IupTabs/Tree only
--Affects: IupCanvas, IupButton, IupText, IupList, IupGLCanvas :
--IupSetCallback(dlg, "BUTTON_CB",  Icallback("button_cb"))
IupSetCallback(text, "BUTTON_CB",  Icallback("button_cb"))
IupSetCallback(txt2, "BUTTON_CB",  Icallback("button2_cb"))

IupSetAttributeHandle(dlg,"MENU",menu)
--popup_menu = menu
IupSetAttributeHandle(NULL,"PARENTDIALOG",dlg)
IupShowXY(dlg, IUP_CENTER, IUP_CENTER)
--?IupGetAttribute(dlg,"FONT")  -- "Segoe UI,  9"
if platform()!=WEB then
    IupMainLoop()
    IupClose()
end if

