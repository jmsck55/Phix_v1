--
-- pwa\phix\IupTreeView2.exw
-- =========================
--
--  Shows how to defer-load nodes on expand/demand.
--  See also IupTreeView.exw
--
include pGUI.e

-- Obviously would probably be more dynamically set in a real app,
-- and of course this does not have to be finalised at the get-go, 
-- the USERDATA of 4 could be allocated/added when 1 is opened.
-- (Whereas the 1/2/3 already in tree-nodes would usually be added
--  when that is built, typically before the IupTreeView() call.)

sequence treedata = {{"equilateral",        -- 1
--                    "isoceles",
                      {"isoceles",      -- (branch with 2 children)
--                    {"STATE","COLLAPSED"},
                      {"STATE","COLLAPSED","USERDATA",4},
--                    {"acute",
--                      "obtuse",
--                    }},
                      {"dummy"}},           -- (ensures we get a '+')
                      "scalenus"},
                     {"some",               -- 2
                      "other",
                      "branch"},
--                   {"acute",
--                    "obtuse"},
                     {},                    -- 3 (kills + w/o opening)
                     {"acute",              -- 4
                      "obtuse"}
                    }


constant tree_nodes = {"Figures",               -- (branch with 5 children)
--                     {"STATE","COLLAPSED"},   --  (works fine, btw)
                       {"Other",                -- (leaf)
                        {"triangle",            -- (branch with 3 children)
                         {"STATE","COLLAPSED"},
                         {"equilateral",
--                        "isoceles",
                          {"isoceles",          -- (branch with 2 children)
--                         {"STATE","COLLAPSED"},
                           {"STATE","COLLAPSED","USERDATA",3},
--                         {"STATE","COLLAPSED","USERDATA",3}}, -- NO!
--                         {"acute",
--                          "obtuse",
--                         }},
                           {"dummy"}},          -- (ensures we get a '+')
--                         {}},                 -- ([we don't get a '+'])
                          "scalenus",
                         }},
                        {"triangle",            -- (branch with 3 children)
                         {"STATE","COLLAPSED","USERDATA",1},
                         {"dummy"}},            -- (ensures we get a '+')
                        {"parallelogram",       -- (branch with 2 children)
                         {"square",
                          {"diamond",
                           {"COLOR","92 92 255","TITLEFONT","Courier, 8"},
                           0}   -- (nb: this is a leaf, non-optional here)
                         }},
                        "2D",                   -- (leaf)
--                      {"2D"},                 -- (same)
--                      {"2D",0},               -- (same)
--                      {"2D",{},0},            -- (same)
                        {"3D",
                         {"STATE","COLLAPSED"}, -- (needed here)
                         {}},                   -- (branch, empty)
                        {"4D",                  -- (works just fine, if 8 uncommented above)
                         {"STATE","COLLAPSED","USERDATA",2},
                         {"dummy"}}             -- (branch, deferred load)
                       }
                      }

function branchopen_cb(Ihandle tree, integer id)
    integer userid = IupTreeGetUserId(tree,id)
--  printf(1,"BRANCHOPEN_CB (%08x,%d,%d)\n", {tree,id,userid});
    if userid!=0 
    and treedata[userid]!=0 then -- (deferred load (still) rqd for this node)
        -- first kill off "dummy" (which ensured a '+'):
        IupSetAttributeId(tree,"DELNODE",id,"CHILDREN")
        sequence children = treedata[userid]
        IupTreeAddNodes(tree, children, userid)
        -- finally remove the deferred load (or otherise mark as done, if
        -- this isn't done then any sub-trees get deleted and collapsed.)
        treedata[userid] = 0
        if length(children)=0 then return IUP_IGNORE end if
--  else
--      -- prevent empty branches from "opening"...
--      if IupGetIntId(tree,"CHILDCOUNT",id)=0 then return IUP_IGNORE end if
    end if
    return IUP_DEFAULT
end function

IupOpen()
Ihandle tree = IupTreeView(tree_nodes,Icallback("branchopen_cb"))
--IupSetAttributes(tree,"IMAGELEAF=IMGEMPTY, IMAGEBRANCHCOLLAPSED=IMGEMPTY, IMAGEBRANCHEXPANDED=IMGEMPTY") -- ugly!
--IupSetAttributes(tree,"HIDEBUTTONS=YES, HIDELINES=YES")
--IupSetAttributes(tree,"MARKMODE=MULTIPLE")
Ihandle dlg = IupDialog(tree)
IupSetAttribute(dlg,"TITLE","IupTreeView deferred load demo")
IupSetAttribute(dlg,"RASTERSIZE","400x400")
IupShow(dlg)
IupSetAttribute(dlg,"RASTERSIZE", NULL);
if platform()!=WEB then
    IupMainLoop()
end if

