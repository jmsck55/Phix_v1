--
-- p2js_depend.e (nb automatically over-written in/by p2js_scope.e, all comments get trashed)
--
-- Each entry is {"builtin.e",{dependencies, if any},{locals, if any},{{routine,{args}}}} 
-- Rebuild builtins (Ctrl R) verifies no locals clash, and renames them with a $-prefix.
-- Note that "pGUI.e"/"mpfr.e"/"timedate.e" are manually maintained, the rest auto-built.
--
global sequence p2js_depend = 
{{`assert.e`,
  {{}},
  {{}},
  {{`assert`, {{`condition`, `?`}, {`msg`, `""`}, {`args`, `{}`}}}}},
 {`base64.e`,
  {{`pflatten.e`, `substitute.e`}},
  {{`base64_init`, `aleph`, `ccha`, `init_base64`}},
  {{`decode_base64`, {{`src`, `?`}}},
   {`encode_base64`, {{`src`, `?`}, {`wrap_column`, `0`}}}}},
 {`bsearch.e`,
  {{}},
  {{}},
  {{`binary_search`, {{`needle`, `?`}, {`haystack`, `?`}}}}},
 {`dict.e`,
  {{`pmaths.e`}},
  {{`KEY`, `DATA`, `LEFT`, `HEIGHT`, `RIGHT`, `trees`, `treenames`, `roots`, `sizes`, `defaults`, `freelists`, `free_trees`,
    `init_dict`, `dict_init`, `check_tid`, `newNode`, `setHeight`, `rotate`, `getBalance`, `insertNode`, `getNode`, `getKey`,
    `minValueNode`, `deleteNode`, `traverse`, `traverse_key`, `traverser`, `peekpop`}},
  {{`deld`, {{`key`, `?`}, {`tid`, `1`}}},
   {`destroy_dict`, {{`tid`, `?`}, {`justclear`, `false`}}},
   {`dict_name`, {{`tid`, `1`}}},
   {`dict_size`, {{`tid`, `1`}}},
   {`getd`, {{`key`, `?`}, {`tid`, `1`}}},
   {`getdd`, {{`key`, `?`}, {`dflt`, `?`}, {`tid`, `1`}}},
   {`getd_all_keys`, {{`tid`, `1`}}},
   {`getd_by_index`, {{`node`, `?`}, {`tid`, `1`}}},
   {`getd_index`, {{`key`, `?`}, {`tid`, `1`}}},
   {`getd_partial_key`, {{`pkey`, `?`}, {`tid`, `1`}, {`rev`, `false`}}},
   {`is_dict`, {{`tid`, `?`}}},
   {`named_dict`, {{`name`, `?`}}},
   {`new_dict`, {{`kd_pairs`, `{}`}, {`pool_only`, `0`}}},
   {`peep_dict`, {{`tid`, `1`}, {`rev`, `false`}}},
   {`pop_dict`, {{`tid`, `1`}, {`rev`, `false`}}},
   {`putd`, {{`key`, `?`}, {`data`, `?`}, {`tid`, `1`}}},
   {`setd`, {{`key`, `?`}, {`data`, `?`}, {`tid`, `1`}}},
   {`setd_default`, {{`o`, `?`}, {`tid`, `?`}}},
   {`traverse_dict`, {{`rid`, `?`}, {`user_data`, `0`}, {`tid`, `1`}, {`rev`, `false`}}},
   {`traverse_dict_partial_key`, {{`rid`, `?`}, {`pkey`, `?`}, {`user_data`, `0`}, {`tid`, `1`}, {`rev`, `false`}}}}},
 {`factorial.e`,
  {{}},
  {{`finit`, `fcache`}},
  {{`choose`, {{`n`, `?`}, {`k`, `?`}}},
   {`factorial`, {{`n`, `?`}}},
   {`k_perm`, {{`n`, `?`}, {`k`, `?`}}}}},
 {`find.e`,
  {{}},
  {{}},
  {{`find`, {{`needle`, `?`}, {`haystack`, `?`}, {`start`, `1`}}},
   {`rfind`, {{`needle`, `?`}, {`haystack`, `?`}, {`start`, `-1`}}}}},
 {`findrepl.e`,
  {{`find.e`}},
  {{}},
  {{`find_replace`, {{`needle`, `?`}, {`haystack`, `?`}, {`replacement`, `?`}, {`max_replacements`, `0`}}}}},
 {`gcd.e`,
  {{`pmaths.e`}},
  {{}},
  {{`gcd`, {{`u`, `?`}, {`v`, `0`}}},
   {`lcm`, {{`m`, `?`}, {`n`, `0`}}}}},
 {`log10.e`,
  {{}},
  {{}},
  {{`log10`, {{`n`, `?`}}},
   {`log2`, {{`n`, `?`}}}}},
 {`match.e`,
  {{`find.e`, `match.e`, `pcase.e`, `pfindall.e`}},
  {{}},
  {{`match`, {{`needle`, `?`}, {`haystack`, `?`}, {`start`, `1`}, {`case_sensitive`, `true`}}},
   {`match_all`, {{`needle`, `?`}, {`haystack`, `?`}, {`start`, `1`}, {`case_sensitive`, `true`}, {`overlap`, `false`}}},
   {`rmatch`, {{`needle`, `?`}, {`haystack`, `?`}, {`start`, `length(haystack)`}, {`case_sensitive`, `true`}}}}},
 {`matchrepl.e`,
  {{`match.e`}},
  {{}},
  {{`match_replace`, {{`needle`, `?`}, {`haystack`, `?`}, {`replacement`, `?`}, {`maxr`, `0`}}}}},
 {`misc.e`,
  {{}},
  {{`trig_range`}},
  {{`arccos`, {{`x`, `?`}}},
   {`arcsin`, {{`x`, `?`}}},
   {`reverse`, {{`src`, `?`}, {`from_to`, `{1,-1}`}}}}},
 {`mpfr.e`,
  {{`primes.e`}},
  {{}},
  {{`mpz_get_str`, {{`x`, `?`}, {`base`, `10`}, {`comma_fill`, `false`}}}}},
 {`ordinal.e`,
  {{`find.e`, `pcolumn.e`, `pmaths.e`}},
  {{`oinit`, `twenties`, `decades`, `orders`, `irregs`, `ordinals`, `inito`, `twenty`, `decade`, `hundred`, `thousand`, `triplet`,
    `spell`}},
  {{`ord`, {{`n`, `?`}}},
   {`ordinal`, {{`n`, `?`}, {`bJustSpell`, `false`}}}}},
 {`pmaths.e`,
  {{}},
  {{}},
  {{`abs`, {{`a`, `?`}}},
   {`atan2`, {{`y`, `?`}, {`x`, `?`}}},
   {`bankers_rounding`, {{`pence`, `?`}, {`precision`, `1`}}},
   {`ceil`, {{`o`, `?`}}},
   {`even`, {{`a`, `?`}}},
   {`exp`, {{`a`, `?`}}},
   {`max`, {{`a`, `?`}, {`b`, `?`}}},
   {`maxsq`, {{`s`, `?`}, {`return_index`, `false`}}},
   {`min`, {{`a`, `?`}, {`b`, `?`}}},
   {`minsq`, {{`s`, `?`}, {`return_index`, `false`}}},
   {`mod`, {{`x`, `?`}, {`y`, `?`}}},
   {`odd`, {{`a`, `?`}}},
   {`round`, {{`a`, `?`}, {`inverted_precision`, `1`}}},
   {`sign`, {{`a`, `?`}}},
   {`trunc`, {{`x`, `?`}}}}},
 {`pcase.e`,
  {{`find.e`, `pcase.e`}},
  {{`caseinit`, `toUpper`, `toLower`, `str_methods`, `LOWER`, `UPPER`, `CAPITALISE`, `SENTENCE`, `INVERT`, `initcase`}},
  {{`islower`, {{`ch`, `?`}}},
   {`isupper`, {{`ch`, `?`}}},
   {`lower`, {{`x`, `?`}}},
   {`proper`, {{`s`, `?`}, {`method`, `"CAPITALISE"`}}},
   {`upper`, {{`x`, `?`}}}}},
 {`pcolumn.e`,
  {{`ptagset.e`}},
  {{}},
  {{`columnize`, {{`source`, `?`}, {`columns`, `{}`}, {`defval`, `0`}}}}},
 {`pdates.e`,
  {{}},
  {{`t`, `dot`, `dim`, `days`, `dinit`, `initd`}},
  {{`day_of_week`, {{`y`, `?`}, {`m`, `?`}, {`d`, `?`}, {`bAsText`, `false`}}},
   {`day_of_year`, {{`y`, `?`}, {`m`, `?`}, {`d`, `?`}}},
   {`days_in_month`, {{`y`, `?`}, {`m`, `?`}}},
   {`is_leap_year`, {{`y`, `?`}}}}},
 {`pdecodeflags.e`,
  {{}},
  {{}},
  {{`decode_flags`, {{`FlagSet`, `?`}, {`v`, `?`}, {`sep`, `"+"`}}}}},
 {`pelapsed.e`,
  {{`match.e`, `pmaths.e`}},
  {{`elaps`, `elapsdwy`}},
  {{`elapsed`, {{`s`, `?`}, {`min_s`, `0`}, {`fmt`, `""`}}},
   {`elapsed_short`, {{`s`, `?`}, {`min_s`, `0`}, {`fmt`, `""`}}}}},
 {`permute.e`,
  {{}},
  {{}},
  {{`permute`, {{`n`, `?`}, {`set`, `?`}}}}},
 {`pextract.e`,
  {{}},
  {{}},
  {{`extract`, {{`source`, `?`}, {`indexes`, `?`}, {`invert`, `false`}}},
   {`reinstate`, {{`source`, `?`}, {`indexes`, `?`}, {`replacements`, `?`}, {`invert`, `false`}}}}},
 {`pfactors.e`,
  {{`pmaths.e`, `primes.e`}},
  {{`check_limits`}},
  {{`factors`, {{`n`, `?`}, {`include1`, `0`}}},
   {`is_prime`, {{`n`, `?`}}},
   {`prime_factors`, {{`n`, `?`}, {`duplicates`, `false`}, {`maxprime`, `100`}}},
   {`square_free`, {{`n`, `?`}, {`maxprime`, `100`}}}}},
 {`pfindall.e`,
  {{`find.e`}},
  {{}},
  {{`find_all`, {{`needle`, `?`}, {`haystack`, `?`}, {`start`, `1`}}}}},
 {`pfindany.e`,
  {{`find.e`}},
  {{}},
  {{`find_any`, {{`needles`, `?`}, {`haystack`, `?`}, {`start`, `1`}}}}},
 {`pflatten.e`,
  {{`find.e`, `pflatten.e`}},
  {{}},
  {{`flatten`, {{`s`, `?`}, {`res`, `""`}}},
   {`join`, {{`s`, `?`}, {`delim`, `" "`}}},
   {`join_by`, {{`s`, `?`}, {`step`, `?`}, {`n`, `?`}, {`step_pad`, `"   "`}, {`n_pad`, `"\n"`}}},
   {`join_path`, {{`path_elements`, `?`}, {`trailsep`, `0`}}}}},
 {`pGUI.e`,
  {{}},
  {{}},
  {{`crash`, {{`msg`, `?`}, {`args`, `{}`}, {`nFrames`, `1`}}},
   {`IupMessage`, {{`title`, `NULL`}, {`msg`, `NULL`}, {`args`, `{}`}, {`bWrap`, `true`}}},
   {`IupTableSetData`, {{`table`, `?`}, {`data`, `?`}, {`bReset`, `true`}}}}},
 {`porall.e`,
  {{}},
  {{}},
  {{`or_all`, {{`s`, `?`}}},
   {`or_allu`, {{`s`, `?`}}}}},
 {`ppp.e`,
  {{`find.e`, `ppp.e`}},
  {{`ppp_Maxlen`, `ppp_Indent`, `ppp_Nest`, `ppp_Pause`, `ppp_StrFmt`, `ppp_IntCh`, `ppp_Init`, `ppp_Ascii`, `ppp_IntFmt`,
    `ppp_FltFmt`, `ppp_Date`, `ppp_Br`, `ppp_Q22`, `ascii`, `ppp_File`, `ppp_result`, `pline`, `plen`, `sline`, `nindent`,
    `spurge`, `sput`, `escBytes`, `escChars`, `constants`, `graphic`, `cl1q`, `cllq`, `prnf`, `pp_fatal`, `setAscii`, `pp_Init`,
    `setOpt`, `pp_Ex`}},
  {{`pp`, {{`o`, `?`}, {`options`, `{}`}}},
   {`ppEx`, {{`o`, `?`}, {`options`, `?`}}},
   {`ppExf`, {{`o`, `?`}, {`options`, `?`}}},
   {`ppf`, {{`o`, `?`}, {`options`, `{}`}}},
   {`ppOpt`, {{`options`, `?`}}}}},
 {`pqueue.e`,
  {{}},
  {{`PDATA`, `PRIORITY`, `pqinit`, `pq`, `pqtype`, `pqcrid`, `freelist`, `pq_compare`, `pq_init`}},
  {{`pq_add`, {{`item`, `?`}, {`pqid`, `1`}}},
   {`pq_destroy`, {{`pqid`, `1`}, {`justclear`, `false`}, {`crid`, `-2`}}},
   {`pq_empty`, {{`pqid`, `1`}}},
   {`pq_new`, {{`t`, `MIN_HEAP`}, {`crid`, `-2`}}},
   {`pq_peek`, {{`pqid`, `1`}}},
   {`pq_pop`, {{`pqid`, `1`}}},
   {`pq_pop_data`, {{`pqid`, `1`}}},
   {`pq_size`, {{`pqid`, `1`}}}}},
 {`premoveall.e`,
  {{`find.e`}},
  {{}},
  {{`remove_all`, {{`needle`, `?`}, {`haystack`, `?`}}}}},
 {`primes.e`,
  {{`bsearch.e`, `pmaths.e`}},
  {{`primes`, `sieved`, `init_sieve`, `add_block`, `is_prime2`}},
  {{`get_maxprime`, {{`p`, `?`}}},
   {`get_prime`, {{`n`, `?`}}},
   {`get_primes`, {{`count`, `0`}}},
   {`get_primes_le`, {{`hi`, `?`}}}}},
 {`pseqc.e`,
  {{}},
  {{}},
  {{`head`, {{`src`, `?`}, {`size`, `1`}}},
   {`insert`, {{`src`, `?`}, {`what`, `?`}, {`index`, `?`}}},
   {`pad`, {{`src`, `?`}, {`size`, `?`}, {`method`, `"BOTH"`}, {`ch`, `' '`}}},
   {`pad_head`, {{`src`, `?`}, {`size`, `?`}, {`ch`, `' '`}}},
   {`pad_tail`, {{`src`, `?`}, {`size`, `?`}, {`ch`, `' '`}}},
   {`remove`, {{`src`, `?`}, {`start`, `?`}, {`stop`, `start`}}},
   {`replace`, {{`src`, `?`}, {`replacement`, `?`}, {`start`, `?`}, {`stop`, `start`}}},
   {`splice`, {{`src`, `?`}, {`what`, `?`}, {`index`, `?`}}},
   {`tail`, {{`src`, `?`}, {`size`, `-1`}}}}},
 {`pseries.e`,
  {{`psqop.e`}},
  {{`binop_ok`}},
  {{`series`, {{`start`, `?`}, {`increment`, `?`}, {`count`, `2`}, {`op`, `'+'`}}}}},
 {`psmall.e`,
  {{}},
  {{}},
  {{`largest`, {{`set`, `?`}, {`return_index`, `0`}}},
   {`smallest`, {{`set`, `?`}, {`return_index`, `0`}}}}},
 {`psplit.e`,
  {{`find.e`, `match.e`, `pfindany.e`}},
  {{}},
  {{`split`, {{`source`, `?`}, {`delimiter`, `' '`}, {`no_empty`, `true`}, {`limit`, `0`}}},
   {`split_any`, {{`source`, `?`}, {`delimiters`, `{',',' ','\t','|'}`}}},
   {`split_by`, {{`s`, `?`}, {`n`, `?`}}},
   {`split_path`, {{`path`, `?`}, {`preservetrailsep`, `false`}}}}},
 {`psqop.e`,
  {{`log10.e`, `misc.e`, `pmaths.e`, `psqop.e`}},
  {{`sq_fatal`, `sq_general`, `sq_unary`}},
  {{`sq_abs`, {{`a`, `?`}}},
   {`sq_add`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_and`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_and_bits`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_arccos`, {{`a`, `?`}}},
   {`sq_arcsin`, {{`a`, `?`}}},
   {`sq_arctan`, {{`a`, `?`}}},
   {`sq_atom`, {{`a`, `?`}}},
   {`sq_ceil`, {{`a`, `?`}}},
   {`sq_cmp`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_cos`, {{`a`, `?`}}},
   {`sq_div`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_even`, {{`a`, `?`}}},
   {`sq_eq`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_floor`, {{`a`, `?`}}},
   {`sq_floor_div`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_ge`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_gt`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_int`, {{`a`, `?`}}},
   {`sq_le`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_log`, {{`a`, `?`}}},
   {`sq_log10`, {{`a`, `?`}}},
   {`sq_log2`, {{`a`, `?`}}},
   {`sq_lt`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_max`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_min`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_mod`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_mul`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_ne`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_not`, {{`a`, `?`}}},
   {`sq_not_bits`, {{`a`, `?`}}},
   {`sq_odd`, {{`a`, `?`}}},
   {`sq_or`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_or_bits`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_power`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_rand`, {{`a`, `?`}}},
   {`sq_rmdr`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_round`, {{`a`, `?`}, {`inverted_precision`, `1`}}},
   {`sq_seq`, {{`a`, `?`}}},
   {`sq_sign`, {{`a`, `?`}}},
   {`sq_sin`, {{`a`, `?`}}},
   {`sq_sqrt`, {{`a`, `?`}}},
   {`sq_str`, {{`a`, `?`}}},
   {`sq_sub`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_tan`, {{`a`, `?`}}},
   {`sq_trunc`, {{`a`, `?`}}},
   {`sq_uminus`, {{`a`, `?`}}},
   {`sq_xor`, {{`a`, `?`}, {`b`, `?`}}},
   {`sq_xor_bits`, {{`a`, `?`}, {`b`, `?`}}}}},
 {`psum.e`,
  {{}},
  {{`zl`}},
  {{`product`, {{`a`, `?`}, {`zlr`, `1`}}},
   {`sum`, {{`a`, `?`}, {`zlr`, `0`}}}}},
 {`ptagset.e`,
  {{`pmaths.e`}},
  {{}},
  {{`tagset`, {{`lim`, `?`}, {`start`, `1`}, {`step`, `1`}}}}},
 {`ptrim.e`,
  {{`find.e`, `psqop.e`, `psum.e`, `ptrim.e`}},
  {{}},
  {{`shorten`, {{`s`, `?`}, {`what`, `"digits"`}, {`ml`, `20`}}},
   {`trim`, {{`source`, `?`}, {`what`, `{' ','\t','\r','\n'}`}, {`return_index`, `false`}}},
   {`trim_head`, {{`source`, `?`}, {`what`, `{' ','\t','\r','\n'}`}, {`return_index`, `false`}}},
   {`trim_tail`, {{`source`, `?`}, {`what`, `{' ','\t','\r','\n'}`}, {`return_index`, `false`}}}}},
 {`punique.e`,
  {{`dict.e`, `punique.e`, `sort.e`}},
  {{`RD_INPLACE`, `RD_PRESORTED`, `RD_SORT`, `ops`, `remove_dups`}},
  {{`unique`, {{`s`, `?`}, {`options`, `"SORT"`}}}}},
 {`pvlookup.e`,
  {{`find.e`, `match.e`, `pcase.e`, `ppp.e`, `ptrim.e`}},
  {{`lookup`, `keyvalues`, `text_format`, `begins`}},
  {{`vlookup`, {{`find_item`, `?`}, {`grid_data`, `?`}, {`source_col`, `?`}, {`target_col`, `?`}, {`def_value`, `0`}}}}},
 {`scanf.e`,
  {{`find.e`, `match.e`, `pcase.e`}},
  {{`NONE`, `LITERAL`, `ATOM`, `STRING`, `DECIMAL`, `BINARY`, `HEXADEC`, `OCTAL`, `parse_fmt`, `scan_ch`, `baseset`, `bases`,
    `binit`, `initb`, `completeFloat`, `get_number`, `scanff`}},
  {{`scanf`, {{`s`, `?`}, {`fmt`, `?`}}},
   {`to_number`, {{`s`, `?`}, {`failure`, `{}`}, {`inbase`, `10`}}}}},
 {`shift_bits.e`,
  {{}},
  {{}},
  {{`shift_bits`, {{`source_number`, `?`}, {`shift_distance`, `?`}}}}},
 {`shuffle.e`,
  {{}},
  {{}},
  {{`shuffle`, {{`s`, `?`}}}}},
 {`sort.e`,
  {{}},
  {{`tagsort`, `column_compare`}},
  {{`custom_sort`, {{`custom_compare`, `?`}, {`x`, `?`}, {`data`, `{}`}, {`order`, `ASCENDING`}}},
   {`sort`, {{`x`, `?`}, {`order`, `ASCENDING`}}},
   {`sort_columns`, {{`x`, `?`}, {`column_list`, `?`}}}}},
 {`substitute.e`,
  {{`match.e`, `substitute.e`}},
  {{}},
  {{`substitute`, {{`text`, `?`}, {`s`, `?`}, {`r`, `?`}, {`limit`, `-1`}}},
   {`substitute_all`, {{`text`, `?`}, {`strings`, `?`}, {`replacements`, `?`}}}}},
 {`timedate.e`,
  {{`find.e`, `pcase.e`, `pcolumn.e`, `pdates.e`, `pmaths.e`}},
  {{`nxtch`, `DT_TZ`, `DT_DSTZ`, `DSTrule`, `addDSTrule`, `EU`, `US`, `AU`, `tdaDD`, `timezones`, `tzdescs`, `tzadjs`, `tzDSR`,
    `tzDSL`, `ktz`, `alttzkeys`, `alttz`, `validtd`, `timedate`, `timedelta`, `TD_LITERAL`, `YEAR`, `MONTH`, `DAY`, `DOW`, `DOY`,
    `HOUR`, `MINUTE`, `SECOND`, `MSEC`, `AM`, `TZ`, `TH`, `en`, `langmax`, `currlang`, `months`, `day_names`, `td_ordinals`,
    `ampm`, `isDSTr`, `get_DST_rule`, `get_tzid`, `override_timezone`, `timedate_to_julian_day`, `julian_day_to_timedate`,
    `day_in_seconds`, `timedate_to_seconds`, `seconds_to_timedate`, `adjust_timedate`, `set_timezone`, `change_timezone`,
    `edescs`, `ecxtra`, `next_fmt`, `to_space`, `td_get_number`, `get_any`, `parse_one`, `default_parse_fmts`, `allow_partial`,
    `default_format`, `set_timedate_formats`, `parse_date_string`, `format_timedate`, `timedate_diff`}},
  {}},
 {`to_int.e`,
  {{}},
  {{}},
  {{`is_integer`, {{`s`, `?`}}},
   {`to_integer`, {{`s`, `?`}, {`def_value`, `0`}}}}},
 {`to_str.e`,
  {{`matchrepl.e`, `pseqc.e`, `ptrim.e`, `to_str.e`}},
  {{}},
  {{`to_string`, {{`data_in`, `?`}, {`string_quote`, `0`}, {`embed_string_quote`, `'"'`}}}}},
 {`unit_test.e`,
  {{`pflatten.e`, `pmaths.e`, `porall.e`, `psqop.e`, `unit_test.e`}},
  {{`fmts`, `tests_run`, `tests_passed`, `tests_failed`, `verbosity`, `abort_on_fail`, `pause_summary`, `log_fn`, `module`,
    `prev_module`, `test_log`, `show_module`, `test_result`}},
  {{`set_test_abort`, {{`abort_test`, `?`}}},
   {`set_test_logfile`, {{`filename`, `?`}}},
   {`set_test_module`, {{`name`, `?`}}},
   {`set_test_pause`, {{`pause`, `?`}}},
   {`set_test_verbosity`, {{`level`, `?`}}},
   {`test_equal`, {{`a`, `?`}, {`b`, `?`}, {`name`, `""`}, {`eq`, `true`}}},
   {`test_fail`, {{`name`, `""`}}},
   {`test_false`, {{`success`, `?`}, {`name`, `""`}}},
   {`test_not_equal`, {{`a`, `?`}, {`b`, `?`}, {`name`, `""`}}},
   {`test_pass`, {{`name`, `""`}}},
   {`test_summary`, {{`close_log`, `true`}}},
   {`test_true`, {{`success`, `?`}, {`name`, `""`}}}}},
 {`utfconv.e`,
  {{}},
  {{`INVALID_UTF8`, `INVALID_UNICODE`}},
  {{`utf8_to_utf16`, {{`utf8`, `?`}}},
   {`utf8_to_utf32`, {{`utf8`, `?`}, {`fail_flag`, `0`}}},
   {`utf16_to_utf8`, {{`utf16`, `?`}}},
   {`utf16_to_utf32`, {{`utf16`, `?`}}},
   {`utf32_to_utf8`, {{`utf32`, `?`}, {`fail_flag`, `0`}}},
   {`utf32_to_utf16`, {{`utf32`, `?`}}}}},
 {`vslice.e`,
  {{}},
  {{}},
  {{`vslice`, {{`source`, `?`}, {`column`, `?`}, {`error_control`, `0`}}}}},
 {`wildcard.e`,
  {{`find.e`, `match.e`, `pcase.e`, `wildcard.e`}},
  {{`qmatch`, `END_MARKER`}},
  {{`wildcard_file`, {{`pattern`, `?`}, {`filename`, `?`}}},
   {`wildcard_match`, {{`pattern`, `?`}, {`str`, `?`}}}}}}


