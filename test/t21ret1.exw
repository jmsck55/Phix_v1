--
-- t21ret1.exw
--
-- Phix tests: simple value return and comparison
--
without warning

function i5()
    return 5
end function
function n5()
    return 5.5
end function
function s5()
    return "five"
end function
function p5()
    return {5}
end function

procedure test()
integer i
atom n
string s
sequence p
object o
--atom t0 t0=time()
    
    i=5
    i=i5()
    if i!=5 then crash("error i!=5\n") end if
    if i!=i5() then crash("error i!=i5()\n") end if
    if i=n5() then crash("error i=n5()\n") end if
    if i5()!=5 then crash("error i5!=5\n") end if
    if i5()!=i5() then crash("error i5()!=i5()\n") end if
    n=5.5
    n=n5()+i5()
    if n!=10.5 then crash("error n!=10.5\n") end if
    n=n5()
    if n!=n5() then crash("error n!=n5()\n") end if
    if n5()!=n then crash("error n5()!=n\n") end if
    if n5()!=5.5 then crash("error n5()!=5.5\n") end if
    if n5()!=n5() then crash("error n5()!=n5()\n") end if
    s="five"
    s=s5()
    if s!="five" then crash("error s!=five\n") end if
    if s!="fi"&"ve" then crash("error s!=fi&ve\n") end if
    if s!='f'&"ive" then crash("error s!=f&ive\n") end if
    if s!="fiv"&'e' then crash("error s!=fiv&e\n") end if
    if s!=s5() then crash("error s!=s5()\n") end if
    if s5()!=s then crash("error s5()!=s\n") end if
    if s5()!="five" then crash("error s5()!=five\n") end if
    if "five"!=s5() then crash("error five!=s5()\n") end if
    if s5()!="fi"&"ve" then crash("error s5()!=fi&ve\n") end if
    p=p5()
    if p!={5} then crash("error p!={5}\n") end if

    if p!=p5() then crash("error p!=p5()\n") end if
    if p5()!=p then crash("error p5()!=p\n") end if
    if p5()!=p5() then crash("error p5()!=p5()\n") end if
    o=5
    if o!=5 then crash("error o!=5\n") end if
    if o!=i5() then crash("error o!=i5()\n") end if
    if o=n5() then crash("error o=n5()\n") end if

    if o=s5() then crash("error o=s5()\n") end if   -- Warning: type error (always false)
    if o=p5() then crash("error o=p5()\n") end if   -- Warning: type error (always false)

    if i5()!=o then crash("error i5!=o\n") end if
    o=i5()
    if o!=5 then crash("error o(i5())!=5\n") end if
    if o!=i5() then crash("error o(i5())!=i5()\n") end if
    o=5.5
    o=n5()+i5()

    if o!=10.5 then crash("error o!=10.5\n") end if
    o=n5()
    if o!=n5() then crash("error o!=n5()\n") end if
    if n5()!=o then crash("error n5()!=o\n") end if
    o="five"

    if o!="five" then crash("error o!=five\n") end if
    if o!=s5() then crash("error o!=s5()\n") end if

    o=s5()

    if o!="five" then crash("error o!=five\n") end if
    if o!="fi"&"ve" then crash("error o!=fi&ve\n") end if
    if o!=s5() then crash("error o!=s5()\n") end if
    if s5()!=o then crash("error s5()!=o\n") end if

    o=p5()

    if o!={5} then crash("error o!={5}\n") end if
    if o!=p5() then crash("error o!=p5()\n") end if
    if p5()!=o then crash("error p5()!=o\n") end if

end procedure
test()

function a(object o)
    return o
end function

function b(object o)
    return a(o)
end function

--?{a(1),b(2)}
if not equal({a(1),b(2)},{1,2}) then
    crash("not equal({a(1),b(2)},{1,2})\n")
end if

--if getc(0) then end if
--printf(1," rt:%3.2f seconds\n",{time()-t0})
puts(1,"done\n")

